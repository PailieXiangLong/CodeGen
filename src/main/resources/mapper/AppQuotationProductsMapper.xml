<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
 ~
 ~ @author [ your email ]
 ~ @date 2020-10-12 23:14:50
 ~ Created by CodeGen .
-->

<mapper namespace="AppQuotationProducts">
    <resultMap id="AppQuotationProductsMap" type="AppQuotationProducts">
        <id property="id" column="id"/>
        <result property="quotationId" column="quotation_id"/>
        <result property="productId" column="product_id"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="table_name">
        app_quotation_products
    </sql>

    <sql id="columns_all">
        id,
        <include refid="columns_exclude_id"/>
    </sql>

    <sql id="columns_exclude_id">
        `quotation_id`, `product_id`, created_at, updated_at
    </sql>

    <sql id="values_exclude_id">
        #{quotationId}, #{productId}, now(), now()
    </sql>

    <sql id="criteria">
        <where>
            <if test="quotationId != null">AND `quotation_id` = #{quotationId}</if>
            <if test="productId != null">AND `product_id` = #{productId}</if>
            <if test="createdAt != null">AND <![CDATA[created_at >= #{createdAt}]]> </if>
            <if test="updatedAt != null">AND <![CDATA[updated_at < #{updatedAt}]]> </if>
        </where>
    </sql>

    <insert id="create" parameterType="AppQuotationProducts" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO
        <include refid="table_name"/>
        (<include refid="columns_exclude_id"/>)
        VALUES
        (<include refid="values_exclude_id"/>)
    </insert>

    <insert id="creates" parameterType="AppQuotationProducts" useGeneratedKeys="true">
        INSERT INTO
        <include refid="table_name"/>
        (<include refid="columns_exclude_id"/>)
        VALUES
        <foreach collection="list" item="i" index="index" separator=",">
            (#{i.quotationId}, #{i.productId}, now(), now())
        </foreach>
    </insert>

    <select id="findById" parameterType="long" resultMap="AppQuotationProductsMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        WHERE id = #{id} LIMIT 1
    </select>

    <select id="findByIds" parameterType="list" resultMap="AppQuotationProductsMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        WHERE id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <update id="update" parameterType="AppQuotationProducts">
        UPDATE
        <include refid="table_name"/>
        <set>
            <if test="quotationId != null">`quotation_id` = #{quotationId},</if>
            <if test="productId != null">`product_id` = #{productId},</if>
            updated_at = now()
        </set>
        WHERE id = #{id}
    </update>

    <delete id="delete" parameterType="long">
        DELETE FROM
        <include refid="table_name"/>
        WHERE id = #{id}
    </delete>

    <select id="count" parameterType="map" resultType="long">
        SELECT COUNT(1)
        FROM
        <include refid="table_name"/>
        <include refid="criteria"/>
    </select>

    <select id="paging" parameterType="map" resultMap="AppQuotationProductsMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="list" parameterType="map" resultMap="AppQuotationProductsMap">
        SELECT
        <include refid="columns_all"/>
        FROM
        <include refid="table_name"/>
        <include refid="criteria"/>
        ORDER BY `id` DESC
    </select>

</mapper>
